{"remainingRequest":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/src/views/theme/Typography.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/src/views/theme/Typography.vue","mtime":1575545247633},{"path":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akhilgshine/Downloads/coreui-free-vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default{\n    name:'typography',\n    data: function () {\n        return {\n            users: [],\n            posts: [],\n            post: {},\n            postListOpen: false\n        }\n    },\n\n    methods: {\n        getUsers(){\n            var vm = this;\n            axios.get('https://jsonplaceholder.typicode.com/users').then(function(success){\n                console.log(success.data)\n                vm.users = success.data\n            }).catch(function(error){\n                vm.users = []\n            })\n        },\n        getPosts(id){\n            this.posts = []\n            this.postListOpen = !this.postListOpen\n            if(!this.postListOpen)\n                return\n            console.log(id)\n            var vm = this;\n            axios.get('https://jsonplaceholder.typicode.com/posts?userId='+id).then(function(success){\n                console.log(success.data)\n                vm.posts = success.data\n            }).catch(function(error){\n                vm.posts = []\n            })\n        },\n        showPost(post){\n            this.post = post\n        }\n    },\n    mounted () {\n        this.setColor()\n    }\n}\n",{"version":3,"sources":["Typography.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Typography.vue","sourceRoot":"src/views/theme","sourcesContent":["<template>\n  <div>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" v-for=\"(item,index) in this.users\" v-bind:key=\"index\">\n        <a data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseExample\" @click=\"getPosts(item.id)\">\n          {{item.name}}\n        </a>\n      </li>\n    </ul>\n    <div class=\"collapse\" id=\"collapseExample\">\n      <div class=\"card card-body\">\n        <ul class=\"list-group\">\n          <button  v-for=\"(item,index)  in this.posts\"  v-bind:key=\"index\" type=\"button\" class=\"list-group-item list-group-item-action\" data-toggle=\"modal\" data-target=\"#exampleModal\" @click=\"showPost(item)\">{{item.title}}</button>\n        </ul>\n      </div>\n    </div>\n    <!-- Modal -->\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Post</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"this.post = {}\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <h5>{{post.title}}</h5>\n            <p>{{post.body}}</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"this.post = {}\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n\n\n</template>\n<script>\n  export default{\n      name:'typography',\n      data: function () {\n          return {\n              users: [],\n              posts: [],\n              post: {},\n              postListOpen: false\n          }\n      },\n\n      methods: {\n          getUsers(){\n              var vm = this;\n              axios.get('https://jsonplaceholder.typicode.com/users').then(function(success){\n                  console.log(success.data)\n                  vm.users = success.data\n              }).catch(function(error){\n                  vm.users = []\n              })\n          },\n          getPosts(id){\n              this.posts = []\n              this.postListOpen = !this.postListOpen\n              if(!this.postListOpen)\n                  return\n              console.log(id)\n              var vm = this;\n              axios.get('https://jsonplaceholder.typicode.com/posts?userId='+id).then(function(success){\n                  console.log(success.data)\n                  vm.posts = success.data\n              }).catch(function(error){\n                  vm.posts = []\n              })\n          },\n          showPost(post){\n              this.post = post\n          }\n      },\n      mounted () {\n          this.setColor()\n      }\n  }\n</script>\n"]}]}